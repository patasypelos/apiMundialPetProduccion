// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MundialApiPet.Modelo;

namespace MundialApiPet.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230916010250_PrimeraCargaDatossssssss222")]
    partial class PrimeraCargaDatossssssss222
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MundialApiPet.Modelo.Inventario.ArticuloInventario", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("NVARCHAR(255)")
                        .HasMaxLength(300);

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("BIT");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDesactivacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTipoArticulo")
                        .HasColumnType("INT");

                    b.Property<int?>("IdTipoMarca")
                        .HasColumnType("INT");

                    b.HasKey("IdArticulo");

                    b.HasIndex("IdTipoArticulo");

                    b.HasIndex("IdTipoMarca");

                    b.ToTable("Articulo");
                });

            modelBuilder.Entity("MundialApiPet.Modelo.Inventario.LogArticuloInventario", b =>
                {
                    b.Property<int>("IdLogArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadVendidad")
                        .HasColumnType("INT");

                    b.Property<string>("Codigo")
                        .HasColumnType("NVARCHAR(255)")
                        .HasMaxLength(300);

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("BIT");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDesactivacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdArticulo")
                        .HasColumnType("INT");

                    b.Property<int?>("IdTipoArticulo")
                        .HasColumnType("INT");

                    b.Property<int?>("IdTipoMarca")
                        .HasColumnType("INT");

                    b.Property<int>("PrecioVenta")
                        .HasColumnType("INT");

                    b.Property<string>("Transaccion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)")
                        .HasMaxLength(30);

                    b.HasKey("IdLogArticulo");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdTipoArticulo");

                    b.HasIndex("IdTipoMarca");

                    b.ToTable("LogArticulo");
                });

            modelBuilder.Entity("MundialApiPet.Modelo.Inventario.TipoArticuloInventario", b =>
                {
                    b.Property<int>("IdTipoArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("NVARCHAR(255)")
                        .HasMaxLength(300);

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("BIT");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR(255)")
                        .HasMaxLength(300);

                    b.HasKey("IdTipoArticulo");

                    b.ToTable("TipoArticulo");
                });

            modelBuilder.Entity("MundialApiPet.Modelo.Inventario.TipoMarcaInventario", b =>
                {
                    b.Property<int>("IdTipoMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("NVARCHAR(255)")
                        .HasMaxLength(300);

                    b.Property<bool>("EstadoActivo")
                        .HasColumnType("BIT");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR(255)")
                        .HasMaxLength(300);

                    b.HasKey("IdTipoMarca");

                    b.ToTable("TipoMarca");
                });

            modelBuilder.Entity("MundialApiPet.Modelo.Inversiones.Inversion", b =>
                {
                    b.Property<int>("IdInversionTienda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("DATETIME");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL");

                    b.HasKey("IdInversionTienda");

                    b.ToTable("InversionTienda");
                });

            modelBuilder.Entity("MundialApiPet.Modelo.Inventario.ArticuloInventario", b =>
                {
                    b.HasOne("MundialApiPet.Modelo.Inventario.TipoArticuloInventario", "FK_TipoArticuloInventarioConArticuloInventario")
                        .WithMany()
                        .HasForeignKey("IdTipoArticulo");

                    b.HasOne("MundialApiPet.Modelo.Inventario.TipoMarcaInventario", "FK_TipoMarcaInventarioConArticuloInventario")
                        .WithMany()
                        .HasForeignKey("IdTipoMarca");
                });

            modelBuilder.Entity("MundialApiPet.Modelo.Inventario.LogArticuloInventario", b =>
                {
                    b.HasOne("MundialApiPet.Modelo.Inventario.ArticuloInventario", "FK_ArticuloInventarioConLogArticuloInventario")
                        .WithMany()
                        .HasForeignKey("IdArticulo");

                    b.HasOne("MundialApiPet.Modelo.Inventario.TipoArticuloInventario", "FK_TipoArticuloInventarioConLogArticuloInventario")
                        .WithMany()
                        .HasForeignKey("IdTipoArticulo");

                    b.HasOne("MundialApiPet.Modelo.Inventario.TipoMarcaInventario", "FK_TipoMarcaInventarioConLogArticuloInventario")
                        .WithMany()
                        .HasForeignKey("IdTipoMarca");
                });
#pragma warning restore 612, 618
        }
    }
}
